summary(x)
summary(x)
print(x)
x <- 5
getwd
print(getwd())
setwd("/phs")
setwd("/home/phs")
x <- 5
print(getwd())
clear
print(abc)
abc = "jsjs"
sample(1:5,4)
sample(1:5, 10)
sample(1:5, 10, replace = TRUE)
qz <- c(1,2,12,4,5,10,11,8,9,14)
sd(qz)
mean(qz)
summary(qz)
UN <- read.table("http://www.stat.ufl.edu/ ~ aa/smss/data/UN.dat",header=TRUE)
UN <- read.table("http://www.stat.ufl.edu/ ~ aa/smss/data/UN.dat",
+
header=TRUE)
UN <- read.table("https://users.stat.ufl.edu/~aa/smss/data/UN.dat", header=TRUE)
UN <- read.table("https://users.stat.ufl.edu/~aa/smss/data/UN.dat", header=TRUE)
~
prop.test(x = c(12033, 1147),
n = c(31142, 3595),
alternative = "greater")
prop.test(x = c(8927, 5243),
n = c(21421, 16120),
alternative = "greater")
prop.test(x = c(10909, 592),
n = c(28926, 1943),
alternative = "greater")
prop.test(x = c(8371, 2813),
n = c(21185, 9277),
alternative = "greater")
install.packages(c("crayon", "DEoptimR", "ergm.count", "igraph", "lpSolveAPI", "magrittr", "MASS", "MatchIt", "network", "networkDynamic", "pillar", "Rcpp", "RcppArmadillo", "robustbase", "sna", "statnet.common", "tergm", "tibble", "viridisLite"))
rm(list = ls())
8 + 11
8 - 3
8 * 3; 8 / 3; 8 ^ 3
8 ^ (1/3)
8 / 3; 8 %/% 3
log(7.389056)
?log
log(9, base = 3); log(9)
e; print(e)
e <- exp(1); log(e^2)
e; print(e)
log(x = 9, base = 3)
sin(pi/2)
tan(pi/2)
cos(pi/2)
sqrt(-4)
4/0
signif(8000/3, 2)
signif(8000/3, 5)
?dnorm
dnorm(0)
dnorm(0, 0, 1)
pnorm(q = -1, 1)
pnorm(q = -1, 0,1)
qnorm(0.5, 10, 2)
rnorm(20, 0, 0.1)
rnorm(20, 0, 0.1)
?distribution
?dt
dt(0, 1000)
dt(0, 1000)
?cot
??cot
ls()
rm(x)
x = -1; y < -3
x
y
y < -3
x = -1; y <-3
ls()
rm(x)
ls()
rm(list = ls())
getwd()
getwd();
list.files()
source("2Vector.R") #like source('2vector.R')
demo(graphics)
demo(plotmath)
q()
e <- exp(1); log(e^2)
e; print(e)
1000^(1/4)
1000/20
log(1000, base = 20)
round(14.781, digits = 0)
floor(10.627)
pnorm(13.9, 14, 7, lower.tail = TRUE)
qnorm(0.7,14,7,lower.tail = TRUE)
pt(-0.1,20,lower.tail = FALSE)
qt(0.04,20,lower.tail = FALSE)
dbinom(x=13, size=26, prob=.54)
?dbinom
pbinom(q=13, size=26, prob=0.54, lower.tail = TRUE)
help(qnorm)
a = array(data=1:12, dim=c(3, 2, 2)); a
dim(a) = c(2,6)
a
a = array(data=1:12, dim=c(3, 2, 2)); a
sum(a[1,,])
a = array(data=1:12, dim=c(3, 2, 2)); a
sum(a[,1,])
a = array(data=1:12, dim=c(3, 2, 2)); a
sum(a[,,1])
a[3,2,1] + a[2,2,2]
sum(a[(a %% 2) == 1])
d = matrix(data = c(9,0,1,2), nrow = 2, ncol = 2, byrow = TRUE);d
d = cbind(d,c(1,1))
d = cbind(c(1,1),d)
d
d = rbind(c(1,1,1,1),d)
d = rbind(d,c(1,1,1,1))
d
sum(d)
d = matrix(data=c(9,0,1,8,2,5,7,4,9,1), nrow = 3, ncol = 3, byrow = TRUE)
d[row(d) - col(d) == 2 - 1]
d = matrix(data=c(9,0,1,2,5,7,4,9,1), nrow = 3, ncol = 3, byrow = TRUE)
d[row(d) - col(d) == 2 - 1]
d = matrix(data=c(9,0,1,2,5,7,4,9,1), nrow = 3, ncol = 3, byrow = TRUE)
d[row(d) + col(d) == 3 + 2]
A = matrix(data = c(9,0,1,2,5,7), nrow = 2, ncol = 3, byrow = TRUE); A
B = matrix(data = c(4,9,1,9,0,1), nrow = 3, ncol = 2, byrow = TRUE); B
sum(A %*% B)
vector.sum = function(x) {
sum = 0
for (i in seq_len(length(x))){
sum = sum + x[i]
}
return(sum)
}
vector.sum(c(1,2,3,4,5))
matrix.sum = function(m) {
sum = 0
for (i in 1:dim(m)[1]) {
for (j in 1:dim(m)[2]) {
sum = sum + m[i][j]
}
}
return(sum)
}
matrix.sum(B)
matrix.sum = function(m) {
sum = 0
for (i in 1:dim(m)[1]) {
for (j in 1:dim(m)[2]) {
sum = sum + m[i,j]
}
}
return(sum)
}
matrix.sum(B)
a = array(data = -(1:24), dim = c(3, 4, 2))
dim(a) = c(3, 4, 2) #back to start, 3-D
a
array.sum = function(a) {
sum = 0
for (i in 1:dim(m)[1]) {
for (j in 1:dim(m)[2]) {
for (k in 1:dim(m)[3]) {
sum = sum + m[i,j,k]
}
}
}
return(sum)
}
array.sum(a)
array.sum = function(a) {
sum = 0
for (i in 1:dim(a)[1]) {
for (j in 1:dim(a)[2]) {
for (k in 1:dim(a)[3]) {
sum = sum + a[i,j,k]
}
}
}
return(sum)
}
array.sum(a)
setMatrixValues = function(A, rows, columns, values) {
for (i in seq_len(length(rows))) {
A[rows[i],columns[i]] = values[i]
}
return(A)
}
setMatrixValues(A=matrix(data=1:6, nrow=2, ncol=3), rows=c(2, 1), columns=c(3, 2), values=c(7, 8))
rm(list=ls())
if (!require("XML")) { # for readHTMLTable()
install.packages("XML")
stopifnot(require("XML"))
}
setwd("~/Documents/PhD/Courses/stst_304/hw3/")
setwd("~/Documents/PhD/Courses/stst_304/hw3/")
getwd()
install.packages("cem")
install.packages("randomForest")
install.packages("cem")
install.packages("cem")
install.packages("randomForest")
version
library("dplyr")
library("MatchIt")
library("lmtest")
library("sandwich")
options(scipen = 100, digits=4)
# Prepare sample data --------------------
data("lalonde")
set.seed(42)
(df <- lalonde %>%
select(treat, educ, race, re78) %>%
sample_n(30))
# Perform CEM --------------------
matching1 <- matchit(treat ~ educ + race, data = df,
method = 'cem', estimand = 'ATE')
summary(matching1, un=FALSE)
setwd("~/Documents/PhD/JIF/final_codes/JIF_10")
data <- read.csv("not_enough_credit_merged_acr_10.csv")
setwd("~/Documents/PhD/JIF/final_codes/JIF_10")
data <- read.csv("not_enough_credit_JIF_10_no_null_race.csv")
print(head(data))
print(nrow(data))
hit_better <- data[data$hits > data$glam,]
print(nrow(hit_better))
glam_better <- data[data$hits < data$glam,]
print(nrow(glam_better))
print(head(hit_better))
print(head(glam_better))
##approach 3: main version
x1 <- hit_better$asi
y1 <- glam_better$asi
x2 <- sort(x1, decreasing = T)
y2 <- sort(y1, decreasing = T)
#x2 <- sample(x=x2, size=length(y2))
#x2 <- sort(x2, decreasing = T)
x3 <- cumsum(x2)
y3 <- cumsum(y2)
ind <- sample(1:length(x3), length(y3), replace = FALSE)
#ind2 <- sort(ind, decreasing = F)
x4 <- x3[ind]
#print(length(x4))
x5 <- sort(x4, decreasing = F)
print(length(x5))
print(length(y3))
#print(x5)
res = ks.test(x5,y3, alternative = "less")
print(res)
setwd("~/Documents/PhD/JIF/final_codes/JIF_10")
data <- read.csv("not_enough_credit_JIF_10_no_null_race.csv")
print(head(data))
print(nrow(data))
hit_better <- data[data$hits > data$glam,]
print(nrow(hit_better))
glam_better <- data[data$hits < data$glam,]
print(nrow(glam_better))
print(head(hit_better))
print(head(glam_better))
##approach 3: main version
x1 <- hit_better$black
y1 <- glam_better$black
x2 <- sort(x1, decreasing = T)
y2 <- sort(y1, decreasing = T)
#x2 <- sample(x=x2, size=length(y2))
#x2 <- sort(x2, decreasing = T)
x3 <- cumsum(x2)
y3 <- cumsum(y2)
ind <- sample(1:length(x3), length(y3), replace = FALSE)
#ind2 <- sort(ind, decreasing = F)
x4 <- x3[ind]
#print(length(x4))
x5 <- sort(x4, decreasing = F)
print(length(x5))
print(length(y3))
#print(x5)
res = ks.test(x5,y3, alternative = "less")
print(res)
setwd("~/Documents/PhD/JIF/final_codes/JIF_10")
data <- read.csv("not_enough_credit_JIF_10_no_null_race.csv")
print(head(data))
print(nrow(data))
hit_better <- data[data$hits > data$glam,]
print(nrow(hit_better))
glam_better <- data[data$hits < data$glam,]
print(nrow(glam_better))
print(head(hit_better))
print(head(glam_better))
##approach 3: main version
x1 <- hit_better$white
y1 <- glam_better$white
x2 <- sort(x1, decreasing = T)
y2 <- sort(y1, decreasing = T)
#x2 <- sample(x=x2, size=length(y2))
#x2 <- sort(x2, decreasing = T)
x3 <- cumsum(x2)
y3 <- cumsum(y2)
ind <- sample(1:length(x3), length(y3), replace = FALSE)
#ind2 <- sort(ind, decreasing = F)
x4 <- x3[ind]
#print(length(x4))
x5 <- sort(x4, decreasing = F)
print(length(x5))
print(length(y3))
#print(x5)
res = ks.test(x5,y3, alternative = "less")
print(res)
setwd("~/Documents/PhD/JIF/final_codes/JIF_10")
data <- read.csv("not_enough_credit_JIF_10_no_null_race.csv")
print(head(data))
print(nrow(data))
hit_better <- data[data$hits > data$glam,]
print(nrow(hit_better))
glam_better <- data[data$hits < data$glam,]
print(nrow(glam_better))
print(head(hit_better))
print(head(glam_better))
##approach 3: main version
x1 <- hit_better$his
y1 <- glam_better$his
x2 <- sort(x1, decreasing = T)
y2 <- sort(y1, decreasing = T)
#x2 <- sample(x=x2, size=length(y2))
#x2 <- sort(x2, decreasing = T)
x3 <- cumsum(x2)
y3 <- cumsum(y2)
ind <- sample(1:length(x3), length(y3), replace = FALSE)
#ind2 <- sort(ind, decreasing = F)
x4 <- x3[ind]
#print(length(x4))
x5 <- sort(x4, decreasing = F)
print(length(x5))
print(length(y3))
#print(x5)
res = ks.test(x5,y3, alternative = "less")
print(res)
setwd("~/Documents/PhD/JIF/final_codes/JIF_10")
data <- read.csv("not_enough_credit_JIF_10_no_null_race.csv")
print(head(data))
print(nrow(data))
hit_better <- data[data$hits > data$glam,]
print(nrow(hit_better))
glam_better <- data[data$hits < data$glam,]
print(nrow(glam_better))
print(head(hit_better))
print(head(glam_better))
##approach 3: main version
x1 <- hit_better$his
y1 <- glam_better$his
x2 <- sort(x1, decreasing = T)
y2 <- sort(y1, decreasing = T)
#x2 <- sample(x=x2, size=length(y2))
#x2 <- sort(x2, decreasing = T)
x3 <- cumsum(x2)
y3 <- cumsum(y2)
ind <- sample(1:length(x3), length(y3), replace = FALSE)
#ind2 <- sort(ind, decreasing = F)
x4 <- x3[ind]
#print(length(x4))
x5 <- sort(x4, decreasing = F)
print(length(x5))
print(length(y3))
#print(x5)
res = ks.test(x5,y3, alternative = "two.sided")
print(res)
setwd("~/Documents/PhD/JIF/final_codes/JIF_10")
data <- read.csv("not_enough_credit_JIF_10_no_null_race.csv")
print(head(data))
print(nrow(data))
hit_better <- data[data$hits > data$glam,]
print(nrow(hit_better))
glam_better <- data[data$hits < data$glam,]
print(nrow(glam_better))
print(head(hit_better))
print(head(glam_better))
##approach 3: main version
x1 <- hit_better$asi
y1 <- glam_better$asi
x2 <- sort(x1, decreasing = T)
y2 <- sort(y1, decreasing = T)
#x2 <- sample(x=x2, size=length(y2))
#x2 <- sort(x2, decreasing = T)
x3 <- cumsum(x2)
y3 <- cumsum(y2)
ind <- sample(1:length(x3), length(y3), replace = FALSE)
#ind2 <- sort(ind, decreasing = F)
x4 <- x3[ind]
#print(length(x4))
x5 <- sort(x4, decreasing = F)
print(length(x5))
print(length(y3))
#print(x5)
res = ks.test(x5,y3, alternative = "two.sided")
print(res)
setwd("~/Documents/PhD/JIF/final_codes/JIF_10")
data <- read.csv("not_enough_credit_JIF_10_no_null_race.csv")
print(head(data))
print(nrow(data))
hit_better <- data[data$hits > data$glam,]
print(nrow(hit_better))
glam_better <- data[data$hits < data$glam,]
print(nrow(glam_better))
print(head(hit_better))
print(head(glam_better))
##approach 3: main version
x1 <- hit_better$black
y1 <- glam_better$black
x2 <- sort(x1, decreasing = T)
y2 <- sort(y1, decreasing = T)
#x2 <- sample(x=x2, size=length(y2))
#x2 <- sort(x2, decreasing = T)
x3 <- cumsum(x2)
y3 <- cumsum(y2)
ind <- sample(1:length(x3), length(y3), replace = FALSE)
#ind2 <- sort(ind, decreasing = F)
x4 <- x3[ind]
#print(length(x4))
x5 <- sort(x4, decreasing = F)
print(length(x5))
print(length(y3))
#print(x5)
res = ks.test(x5,y3, alternative = "two.sided")
print(res)
setwd("~/Documents/PhD/JIF/final_codes/JIF_10")
data <- read.csv("not_enough_credit_JIF_10_no_null_race.csv")
print(head(data))
print(nrow(data))
hit_better <- data[data$hits > data$glam,]
print(nrow(hit_better))
glam_better <- data[data$hits < data$glam,]
print(nrow(glam_better))
print(head(hit_better))
print(head(glam_better))
##approach 3: main version
x1 <- hit_better$white
y1 <- glam_better$white
x2 <- sort(x1, decreasing = T)
y2 <- sort(y1, decreasing = T)
#x2 <- sample(x=x2, size=length(y2))
#x2 <- sort(x2, decreasing = T)
x3 <- cumsum(x2)
y3 <- cumsum(y2)
ind <- sample(1:length(x3), length(y3), replace = FALSE)
#ind2 <- sort(ind, decreasing = F)
x4 <- x3[ind]
#print(length(x4))
x5 <- sort(x4, decreasing = F)
print(length(x5))
print(length(y3))
#print(x5)
res = ks.test(x5,y3, alternative = "two.sided")
print(res)
